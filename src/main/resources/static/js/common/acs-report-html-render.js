define(["jquery","knockout","underscore","signal-emitter","httputils","alert-utils","throttled-ajax"],function(e,t,i,n,a,l,d){var r=function(e,n,a){for(var l,d=/(?:{)(\w+)(?:})(?=\/|\b|$)/g,r=[],s={};l=d.exec(a);)r.push(l[1]);return i.each(r,function(i){s[i]=t.unwrap(e[i])||n[i]}),s},s=function(e,a){var l=t.dataFor(a.element),s=l.$report,o=t.isObservable(e.visible)?e.visible:t.observable("undefined"==typeof e.visible?!0:e.visible),v=t.unwrap(e["html-content-service-url"]),c=t.observableArray(),p=t.observable(!1),b=t.unwrap(e.placeholder)||"No report htmlContent available...",m=!1;n.addListener("Report-Template-Attr-Changed:"+a.element.id,function(e,t,i){"visible"===t&&o(i)},this);var u=function(){if(!m){m=!0,p(!0);var t=i.template(v,{interpolate:/{(\w+)}(?=\/|\b|$)/g}),n=r(e,s,v);d.ajax({url:t(n),type:"GET",dataType:"text",success:function(e){c(e)},complete:function(){p(!1)}})}};return{visible:o,isLoading:p,htmlContent:c,placeholder:b,afterComponentRendered:u}};return{viewModel:{createViewModel:s},template:'<div data-bind="visible: visible()">                            <div class="pretty-list" data-bind="visible: htmlContent().length > 0">                                <div class="row">                                    <div class="col-md-11 col-sm-11 col-xs-11 no-padding-left">                                        <span data-bind="html: htmlContent"></span>                                    </div>                                </div>                            </div>                            <div class="panel panel-default empty-content text-center no-margin-bottom" data-bind="visible: htmlContent().length == 0 && !isLoading()" style="text-align: center">                                <div class="panel-body">                                    <div data-bind="text: placeholder">                                    </div>                                </div>                            </div>                            <div class="panel panel-default empty-content" data-bind="visible: htmlContent().length == 0 && isLoading()" style="text-align: center">                                <div class="panel-body">                                    <div class="row" style="margin-bottom:60px">                                        <div class="spinner-circle">                                                <div class="circle-maker bg-orange medium">                                                    <div class="fa-refresh fa-spin fa txt-white">                                                    </div>                                                </div>                                                <p class="txt-gray no-margin">isLoading...</p>                                            </div>                                        </div>                                    </div>                            </div>                        </div>                        <div data-bind="template: {afterRender: afterComponentRendered()}"></div>'}});