define(["jquery","knockout","acs-resource"],function(a,e,t){var i=function(i){var l=this;return l.options=e.observableArray(),l.init=function(){var o="data/sql/"+i.sql_name,s="";if(i.sql_parameters){for(var n in i.sql_parameters){var d=e.unwrap(i.sql_parameters[n]);s.length>0&&(s+="&"),s+=n+"="+d}o+="?"+s}var r=new t({url:o,global:!1});r.get().done(function(e){a.each(e,function(a,e){l.options.push({name:e.name,value:e.value})})})},l.init(),{id:i.id,label:i.label,labelClass:i.labelWidth?i.labelWidth:"col-md-5",fieldClass:i.fieldWidth?i.fieldWidth:"col-md-6",dropdownWidth:i.dropdownWidth,isSelected:e.isObservable(i.hasFocus)?i.hasFocus:e.observable(i.hasFocus),options:l.options,optionsCaption:i.options_caption,value:i.value}};return{viewModel:{createViewModel:i},template:'<!-- ko if:label.length > 0 -->                    <div data-bind="css: labelClass"><label data-bind="text: label, attr : { for:id }"></label></div>                <!-- /ko -->                <div data-bind="attr: {class: fieldClass}">                    <select data-bind="value: value, hasFocus: isSelected, options: options(), optionsText: \'name\', optionsValue: \'value\', optionsCaption: optionsCaption, attr: { id: id }, style: {width: dropdownWidth}"/>                </div>'}});